/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Daos.DaoCliente;
import Daos.DaoConexao;
import Daos.DaoItem;
import Daos.DaoNegociacao;
import Daos.DaoPassagem;
import Daos.DaoPessoa;
import Daos.DaoVendedor;
import Daos.DaoVoo;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import wagair.Aviao;
import wagair.Cliente;
import wagair.Conexao;
import wagair.Item;
import wagair.Login;
import wagair.Negociacao;
import wagair.Passagem;
import wagair.Pessoa;
import wagair.Vendedor;
import wagair.Voo;

/**
 *
 * @author a1625381
 */
public class compraFrame extends javax.swing.JFrame {

    /**
     * Creates new form compraFrame
     */
    ArrayList<String> strConexao = new ArrayList<>();
    ArrayList<Conexao> resultadoConexao;
    Login login;
    
     public void setLogin(Login l)
    {
        this.login = l;
    }
   
    
    public compraFrame() throws SQLException, ClassNotFoundException, Exception {
     
        
        
         
        
        
        DaoConexao dc = new DaoConexao();
        
        resultadoConexao = dc.getConexao();
        
        for (Conexao auxc : resultadoConexao) {
            Voo first = auxc.getVoo().get(0);
            Voo last = auxc.getVoo().get(auxc.getVoo().size()-1);
            
                        
                        strConexao.add(first.getRota().getOrigem().getNome() + " -> " + last.getRota().getDestino().getNome() + " - " + first.getDataPartida().getTime() + " - " + last.getDataChegada().getTime()); 
        }
        
              
                         
               
                   
            
        
        
                initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comprarButton = new javax.swing.JButton();
        VooxLabel = new javax.swing.JLabel();
        conexaoComboBox = new javax.swing.JComboBox<String>();
        valTotalLabel = new javax.swing.JLabel();
        valorLabel = new javax.swing.JLabel();
        qnt1Spinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        comprarButton.setText("Comprar");
        comprarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprarButtonActionPerformed(evt);
            }
        });

        VooxLabel.setText("Voo:");

        conexaoComboBox.setModel(new javax.swing.DefaultComboBoxModel(strConexao.toArray()));
        conexaoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conexaoComboBoxActionPerformed(evt);
            }
        });

        valTotalLabel.setText("Valor total:");

        valorLabel.setText("0,00");

        qnt1Spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                qnt1SpinnerStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(valTotalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(VooxLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(conexaoComboBox, 0, 537, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qnt1Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(comprarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VooxLabel)
                    .addComponent(conexaoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qnt1Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valTotalLabel)
                    .addComponent(valorLabel))
                .addGap(18, 18, 18)
                .addComponent(comprarButton)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conexaoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conexaoComboBoxActionPerformed

  try{
      int qtd1;
      int idx1;
      float total = 0;
       String strExibe;
    qtd1 = Integer.parseInt(String.valueOf(qnt1Spinner.getValue()));
    idx1 = conexaoComboBox.getSelectedIndex();
    total += qtd1 * resultadoConexao.get(idx1).getPreco();
    strExibe = String.valueOf(total);
    if (strExibe.charAt(strExibe.length()-2) == '.')
    {
        strExibe += '0';
    }
    strExibe.replace('.', ',');
    valorLabel.setText(strExibe);
    
 
    
  }
  catch (Exception e)
  {
      JOptionPane.showMessageDialog(null, "valor da quantidade inválido");
  }
    }//GEN-LAST:event_conexaoComboBoxActionPerformed

    private void qnt1SpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_qnt1SpinnerStateChanged
       
          try{
      int qtd1;
      int idx1;
      float total = 0;
      String strExibe;
    qtd1 = Integer.parseInt(String.valueOf(qnt1Spinner.getValue()));
    idx1 = conexaoComboBox.getSelectedIndex();
    total += qtd1 * resultadoConexao.get(idx1).getPreco();
    strExibe = String.valueOf(total);
    if (strExibe.charAt(strExibe.length()-2) == '.')
    {
        strExibe += '0';
    }
    strExibe.replace('.', ',');
    valorLabel.setText(strExibe);
  }
  catch (Exception e)
  {
      JOptionPane.showMessageDialog(null, "valor da quantidade inválido");
  }
    }//GEN-LAST:event_qnt1SpinnerStateChanged

    private void comprarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprarButtonActionPerformed
        ArrayList<Passagem> passagensGeradas = new ArrayList<>();
        
     int idx1 = conexaoComboBox.getSelectedIndex();;
     int proximoAssento;
     
     Conexao con = resultadoConexao.get(idx1);
     
     
                
        
        try
        {
            ArrayList<Passagem> passagens = new ArrayList<>();
            DaoPassagem dp = new DaoPassagem(con.getID());
            proximoAssento = Integer.parseInt(dp.getUltimoAssento()) + 1; 
            int qtd1 = Integer.parseInt(String.valueOf(qnt1Spinner.getValue()));
            //verifica se há lugares
            boolean verifica = true;
     
            for (Voo vaux  : con.getVoo())
            {
                if (vaux.getAssentosLivres()<qtd1)
                {
                    verifica = false;
                    JOptionPane.showMessageDialog(null, "Não há "+qtd1+" assentos livres para esta viagem");
                    break;
                }
                
            }
     
            if (verifica == true)
            {                
                try {
                for (int i=0; i<qtd1; i++)
                {
                    Passagem passagemAux = new Passagem(resultadoConexao.get(idx1),String.valueOf(proximoAssento));
                    DaoPassagem daop = new DaoPassagem(passagemAux);
                    daop.insertPassagem();
                    passagemAux.getID(); ///////////////////////////////////
                    passagens.add(passagemAux);
                    proximoAssento++;
                }
                }
                catch (Exception e)
                {
                    System.out.println("Erro ao gerar id das passagens");
                }
                 //insere o item
                Item item = new Item(passagens);
                

                DaoItem di = new DaoItem(item);
                di.insertItem();
                
                
                // cria e insere negociacao
                int pessoaClienteIDAUX;
                int pessoaVendedorIDAUX;
                float total = 0;
                DaoCliente daoCliente = new DaoCliente();
                DaoVendedor daoVendedor = new DaoVendedor();
                DaoPessoa daoPessoa = new DaoPessoa();
                
                try{
                pessoaClienteIDAUX = daoPessoa.getPessoaIDByLoginID(this.login.getID());
                pessoaVendedorIDAUX = daoPessoa.getPessoaIDByLoginID(con.getLoginVendedor().getID());
                 Cliente cliente = daoCliente.getClienteByPessoaID(pessoaClienteIDAUX);
                 Vendedor vendedor = daoVendedor.getVendedorByPessoaID(pessoaVendedorIDAUX);
                                 total += qtd1 * resultadoConexao.get(idx1).getPreco();
                                 try {
                Negociacao negociacao = new Negociacao(item, cliente, vendedor, total);
                
                DaoNegociacao daoNegociacao = new DaoNegociacao(negociacao);
               
                daoNegociacao.insertNegociacao();
                 JOptionPane.showMessageDialog(null, "Negociação efetuada com sucesso");
                                 }
                                 catch (Exception e)
                                 {
                                     System.out.println("Erro ao criar a negociacao");
                                      e.printStackTrace();
                                 }
                                     }
                catch (Exception e)
                {
                    System.out.println("Erro ao gerar o cliente e vendedor para negociacao");
                    e.printStackTrace();
                }
                 

            }
        }
        catch (Exception e )
        {
            JOptionPane.showMessageDialog(null, "Erro ao gerar número do assento");
            e.printStackTrace();
        }
       
        
    }//GEN-LAST:event_comprarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(compraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(compraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(compraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(compraFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {               
                    new compraFrame().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(compraFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(compraFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel VooxLabel;
    private javax.swing.JButton comprarButton;
    private javax.swing.JComboBox<String> conexaoComboBox;
    private javax.swing.JSpinner qnt1Spinner;
    private javax.swing.JLabel valTotalLabel;
    private javax.swing.JLabel valorLabel;
    // End of variables declaration//GEN-END:variables
}
